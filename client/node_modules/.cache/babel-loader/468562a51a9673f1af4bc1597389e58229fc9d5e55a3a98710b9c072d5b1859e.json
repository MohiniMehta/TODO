{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohin\\\\OneDrive\\\\Desktop\\\\git_Clones\\\\todo app\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Todo from \"./Todo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [todos, setTodos] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  useEffect(() => {\n    async function getTodos() {\n      try {\n        const res = await fetch(\"/api/todos\");\n        if (!res.ok) {\n          throw new Error(`Failed to fetch data: ${res.status}`);\n        }\n        const todos = await res.json();\n        console.log(todos);\n        setTodos(todos);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error.message);\n      }\n    }\n    getTodos();\n  }, []);\n  const createNewTodo = async e => {\n    e.preventDefault();\n    if (content.length > 1) {\n      const res = await fetch(\"/api/todos\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          todo: content\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const newTodo = await res.json();\n      setContent(\"\");\n      setTodos([...todos, newTodo]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"TO DO's\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: createNewTodo,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: content,\n        onChange: e => setContent(e.target.value),\n        placeholder: \"Enter a new todo...\",\n        className: \"form_input\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"form__button\",\n        children: \"Create Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todos\",\n      children: todos.length > 0 && todos.map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n        todo: todo,\n        setTodos: setTodos\n      }, todo._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 4\n  }, this);\n}\n_s(App, \"x469+4Gkn201uv5rJINGBNas8JE=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Todo","jsxDEV","_jsxDEV","App","_s","todos","setTodos","content","setContent","getTodos","res","fetch","ok","Error","status","json","console","log","error","message","createNewTodo","e","preventDefault","length","method","body","JSON","stringify","todo","headers","newTodo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","map","_id","_c","$RefreshReg$"],"sources":["C:/Users/mohin/OneDrive/Desktop/git_Clones/todo app/client/src/App.jsx"],"sourcesContent":["import { useEffect, useState} from \"react\";\nimport Todo from \"./Todo\";\n\nexport default function App() {\n   const [todos,setTodos]=useState(\"\");\n   const [content,setContent]=useState(\"\");\n  useEffect(() => {\n    async function getTodos() {\n      try {\n        const res = await fetch(\"/api/todos\");\n        if (!res.ok) {\n          throw new Error(`Failed to fetch data: ${res.status}`);\n        }\n        const todos = await res.json();\n    \n        console.log(todos);\n        setTodos(todos);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error.message);\n      }\n    }\n    getTodos();\n  }, []);\n  \n const createNewTodo= async (e)=>{\n  e.preventDefault();\n  if (content.length>1){\n    const res=await fetch(\"/api/todos\",{\n      method:\"POST\",\n      body: JSON.stringify({todo:content}),\n      headers:{\n        \"Content-Type\":\"application/json\",\n      },\n    });\n    const newTodo =await res.json();\n    setContent(\"\");\n    setTodos([...todos,newTodo]);\n  }\n }\n\n  return (\n   <main className=\"container\">\n    <h1 className=\"title\">TO DO's</h1>\n    <form className=\"form\" onSubmit={createNewTodo}>\n      <input type=\"text\" value={content} onChange={(e)=>setContent(e.target.value)} placeholder=\"Enter a new todo...\" className=\"form_input\" required/>\n      <button type=\"submit\" className=\"form__button\">Create Todo</button>\n    </form>\n    <div className=\"todos\">\n    {(todos.length>0) && \n    todos.map((todo)=>\n    (\n      <Todo key={todo._id} todo={todo} setTodos={setTodos}/>\n    ))\n    }\n    </div>\n   </main>\n  );\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}